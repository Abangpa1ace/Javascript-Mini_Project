[HTML&CSS] 

1) <h1> 안에 <button> 넣고, {position: absolute}로 위치를 잡음
  -> right: 0, transform: translate(120%, -50%);

2) flip버튼은 .inner-card-front::after {content: '\f021 Flip';} 추가.

3) .front는 {transform: rotateX(0deg), z-index: 2;}, .back는 {transform: rotateX(180deg);} 
   .card.rotate {transform: rotateX(180deg)}를 줘서 회전시킴.
   추가로, {backface-visibility: hidden;}을 주면, 뒷면이 가려짐.

4) .card {
        opacity: 0;
        transform: translateX(50%) rotateY(-10deg)
    }

    .card.active {
        cursor: pointer;
        opacity: 1;
        z-index: 10;
        transform: translateX(0) rotateY(0deg);
    }

    .card.left {
        transform: translateX(-50%) rotateY(10deg);
    }

    card 기본은 안보이게, active일때 보이기 및 중앙위치, left일때 왼쪽으로 미는 동작을 각각의 class로 구현.
    JS로 제어할 때, classList가 아닌 className = 'card active' 와 같이 제어하면 된다.

5) card(좌우동작), inner-card(회전동작) 을 각각 지정


[JS]

1) next, prev 제어시, 전에는 .className = 'card left(right)' / 후에는 .className = 'card active'

2) addCard(), clearCards() 등 특정 제어가 끝난뒤, window.location.reload()를 줘서 첫 카드로 돌아가기.

3) JSON.parse / JSON.stringify / cardCheck 업데이트 등 작은 기능들도 함수화해서, 필요시 반영했다.

